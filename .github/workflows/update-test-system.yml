name: Test system

on:
  pull_request_target:
    types: [labeled, unlabeled, closed]

  workflow_dispatch:
    inputs:
      job-to-run:
        description: Enter the job name (manual-image-build)
        options: ["manual-image-build"]
        required: true
      image:
        description: "Enter the latest image tag"
        required: true

env:
  PR_NUMBER: ${{ github.event.number }}
  BRANCH_NAME: ${{ github.head_ref || github.ref_name }}

jobs:
  Building-image-for-test-system:
    runs-on: ubuntu-22.04

    if: ${{ github.event.action == 'labeled' && github.event.label.name == 'update-test-system' }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.ref }}

      # Create Docker Buildx builder with platform configuration
      - name: Set up Docker Buildx
        run: |
          mkdir -p ~/.docker/cli-plugins
          curl -SL https://github.com/docker/buildx/releases/download/v0.11.0/buildx-v0.11.0.linux-amd64 -o ~/.docker/cli-plugins/docker-buildx
          chmod a+x ~/.docker/cli-plugins/docker-buildx
          docker buildx create --name mybuilder --platform linux/arm64,linux/amd64,linux/amd64/v2,linux/riscv64,linux/ppc64le,linux/s390x,linux/386,linux/mips64le,linux/mips64,linux/arm/v7,linux/arm/v6
          docker buildx use mybuilder

      - name: Set DOCKER_CLI_EXPERIMENTAL
        run: echo "DOCKER_CLI_EXPERIMENTAL=enabled" >> $GITHUB_ENV

      - name: use mybuilder buildx
        run: docker buildx use mybuilder

      - name: Docker Login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: docker/production.Dockerfile
          push: true
          tags: tooljet/tj-osv:${{ env.SAFE_BRANCH_NAME }}-${{ env.COMMIT_HASH }}
          platforms: linux/amd64
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

      - name: SSH into EC2 instance
        uses: appleboy/ssh-action@master
        with:
          host: ${{ env.EC2_INSTANCE_IP }}
          username: admin
          key: ${{ env.EC2_INSTANCE_SSH_KEY }}
          script: |
            cd /path/to/your/docker/compose/directory

            # Stop the Docker containers
            docker-compose down

            # Update docker-compose.yml with the new image
            sed -i 's|image: your_previous_image_name|image: tooljet/tj-osv:${{ github.event.pull_request.head.ref }}|' docker-compose.yml

            # Start the Docker containers
            docker-compose up -d

      - name: docker logs
        run: |
          docker logs Tooljet-app


  manual-image-build:
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.job-to-run == 'manual-image-build' }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.ref }}

      # Create Docker Buildx builder with platform configuration
      - name: Set up Docker Buildx
        run: |
          mkdir -p ~/.docker/cli-plugins
          curl -SL https://github.com/docker/buildx/releases/download/v0.11.0/buildx-v0.11.0.linux-amd64 -o ~/.docker/cli-plugins/docker-buildx
          chmod a+x ~/.docker/cli-plugins/docker-buildx
          docker buildx create --name mybuilder --platform linux/arm64,linux/amd64,linux/amd64/v2,linux/riscv64,linux/ppc64le,linux/s390x,linux/386,linux/mips64le,linux/mips64,linux/arm/v7,linux/arm/v6
          docker buildx use mybuilder

      - name: Set DOCKER_CLI_EXPERIMENTAL
        run: echo "DOCKER_CLI_EXPERIMENTAL=enabled" >> $GITHUB_ENV

      - name: use mybuilder buildx
        run: docker buildx use mybuilder

      - name: Docker Login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: docker/production.Dockerfile
          push: true
          tags: tooljet/tj-osv:${{ github.event.inputs.image }}
          platforms: linux/amd64
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}





